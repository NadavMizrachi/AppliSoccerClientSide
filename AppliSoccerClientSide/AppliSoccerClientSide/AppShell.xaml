<?xml version="1.0" encoding="UTF-8"?>
<Shell xmlns="http://xamarin.com/schemas/2014/forms" 
       xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
       xmlns:local="clr-namespace:AppliSoccerClientSide.Views"
       xmlns:fonts="clr-namespace:AppliSoccerClientSide.Helpers.Fonts"
       Title="AppliSoccer"
       BackgroundColor="{DynamicResource SystemWhite}"
       Shell.ForegroundColor="{DynamicResource Primary}" 
       x:Class="AppliSoccerClientSide.AppShell">

    <!--
        The overall app visual hierarchy is defined here, along with navigation.
    
        https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/
    -->

    <Shell.Resources>
        <ResourceDictionary>
            <Style x:Key="BaseStyle" TargetType="Element">
                <Setter Property="Shell.BackgroundColor" Value="{StaticResource Primary}" />
                <Setter Property="Shell.ForegroundColor"
                        Value="{DynamicResource Secondery}" />
                <Setter Property="Shell.TitleColor" Value="{DynamicResource Secondery}" />
                <Setter Property="Shell.DisabledColor" Value="#B4FFFFFF" />
                <Setter Property="Shell.UnselectedColor"
                        Value="{DynamicResource Secondery}" />
                <Setter Property="Shell.TabBarBackgroundColor"
                        Value="{DynamicResource Primary}" />
                <Setter Property="Shell.TabBarForegroundColor"
                        Value="{DynamicResource Secondery}"/>
                <Setter Property="Shell.TabBarUnselectedColor"
                        Value="{DynamicResource Secondery}" />
                <Setter Property="Shell.TabBarTitleColor"
                        Value="{DynamicResource Secondery}"/>
            </Style>
            <Style TargetType="NavigationPage">
                <Setter Property="BarBackgroundColor"
                        Value="{DynamicResource Primary}" />
                <Setter Property="BarTextColor"
                        Value="{DynamicResource Secondery}" />
            </Style>
            <Style TargetType="TabbedPage">
                <Setter Property="BarBackgroundColor"
                        Value="{DynamicResource Primary}" />
                <Setter Property="BarTextColor"
                        Value="{DynamicResource Secondery}" />
                <Setter Property="UnselectedTabColor"
                        Value="{DynamicResource Secondery}" />
            </Style>
            
            <Style TargetType="TabBar" BasedOn="{StaticResource BaseStyle}" />
            <Style TargetType="FlyoutItem" BasedOn="{StaticResource BaseStyle}" />

            <!--
            Default Styles for all Flyout Items
            https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyoutitem-and-menuitem-style-classes
            -->
            <Style TargetType="Label"
                   Class="FlyoutItemLabelStyle">
                <Setter Property="HeightRequest"
                        Value="100" />
            </Style>

            <Style Class="FlyoutItemLabelStyle" TargetType="Label">
                <Setter Property="TextColor"
                        Value="{StaticResource Primary}"></Setter>
            </Style>
            <Style Class="FlyoutItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{x:OnPlatform UWP=Transparent, iOS=White}" />
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{StaticResource Primary}" />
                                    <Setter Property="HeightRequest"
                                            Value="80" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Selected">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource SystemGray6}" />
                                    <Setter Property="HeightRequest"
                                            Value="80" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>

            <!--
            Custom Style you can apply to any Flyout Item
            -->
            <Style Class="MenuItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{StaticResource Primary}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Shell.Resources>

    <!-- 
        When the Flyout is visible this defines the content to display in the flyout.
        FlyoutDisplayOptions="AsMultipleItems" will create a separate flyout item for each child element    
        https://docs.microsoft.com/dotnet/api/xamarin.forms.shellgroupitem.flyoutdisplayoptions?view=xamarin-forms
    -->
    
    <!--First page-->
    
    <ShellItem Route="LoginPage"
               FlyoutItemIsVisible="False"
               TabIndex="0">
        <ShellContent Route="LoginPage" ContentTemplate="{DataTemplate local:LoginPage}" />
    </ShellItem>


   


    <!--<ShellItem Route="CountryRegistrationPage" FlyoutItemIsVisible="False">
        <ShellContent Route="CountryRegistrationPage" ContentTemplate="{DataTemplate local:CountryRegistrationPage}" />
    </ShellItem>-->

    <FlyoutItem Title="Schedule"
                IsVisible="{Binding IsSchedulePageAllowed}"
                TabIndex="1">
        <FlyoutItem.Icon>
            <FontImageSource Glyph="{x:Static fonts:IconFont.Calendar}"
                             Color="{StaticResource Primary}"
                             FontFamily="FA-S" />
        </FlyoutItem.Icon>
        <ShellContent Route="SchedulePage" ContentTemplate="{DataTemplate local:Schedule.SchedulePage}" />
    </FlyoutItem>

    <FlyoutItem Title="Orders"
                IsVisible="{Binding IsOrdersPageAllowed}"
                TabIndex="2">
        <FlyoutItem.Icon>
            <FontImageSource Glyph="{x:Static fonts:IconFont.Envelope}"
                             Color="{StaticResource Primary}"
                             FontFamily="FA-S" />
        </FlyoutItem.Icon>
        <Tab>
            <ShellContent Route="SentOrdersPage"
                          Title="Sent"
                          IsVisible="{Binding IsSentOrdersPageAllowed}"
                          ContentTemplate="{DataTemplate local:Orders.SentOrdersPage}" />
            <ShellContent Route="ReceivedOrdersPage"
                          Title="Received"
                          IsVisible="{Binding IsReceivedOrdersPageAllowed}"
                          ContentTemplate="{DataTemplate local:Orders.ReceivedOrdersPage}" />
        </Tab>
    </FlyoutItem>


    <FlyoutItem Title="Team Members"
                Route="TeamMembers"
                TabIndex="3">
        <FlyoutItem.Icon>
            <FontImageSource Glyph="{x:Static fonts:IconFont.Users}"
                             Color="{StaticResource Primary}"
                             FontFamily="FA-S" />
        </FlyoutItem.Icon>
        <Tab Title="Players">
            <ShellContent Route="PlayersPage" 
                          Title="Players"
                          ContentTemplate="{DataTemplate local:PlayersPage}" />
            <ShellContent  Route="StaffMembersPage"
                           Title="Staff"
                           ContentTemplate="{DataTemplate local:StaffMembersPage}" />
        </Tab>
        <!--<Tab Title="Staff">
           
        </Tab>-->
    </FlyoutItem>

    <FlyoutItem Title="Tables"
                Route="Tables"
                IsVisible="{Binding IsTablesPageAllowed}"
                TabIndex="4">
        <FlyoutItem.Icon>
            <FontImageSource Glyph="{x:Static fonts:IconFont.Table}"
                             Color="{StaticResource Primary}"
                             FontFamily="FA-S" />
        </FlyoutItem.Icon>
        <ShellContent Route="MainLeaguePage"
                      ContentTemplate="{DataTemplate local:Tables.MainLeaguePage}"/>
    </FlyoutItem>

    <!-- When the Flyout is visible this will be a menu item you can tie a click behavior to  -->
    <MenuItem Text="Logout" 
              StyleClass="MenuItemLayoutStyle"
              Clicked="LogoutClicked">
        <MenuItem.IconImageSource>
            <FontImageSource Glyph="{x:Static fonts:IconFont.SignOutAlt}"
                             Color="{StaticResource Primary}"
                             FontFamily="FA-S" />
        </MenuItem.IconImageSource>

    </MenuItem>



    <Shell.FlyoutFooterTemplate>
        <DataTemplate>
            <StackLayout Orientation="Vertical"
                         VerticalOptions="Center"
                         HorizontalOptions="Center">
                <Label Text="Powered by Nadav Mizrachi" 
                       FontSize="Caption"
                       HorizontalOptions="Center"
                       TextColor="{StaticResource SystemGray2}"/>
                <Label Text="{x:StaticResource VolleyBallIcon}"
                       FontSize="Caption"
                       FontFamily="FA-S"
                       TextColor="{StaticResource SystemGray2}"
                       HorizontalOptions="Center"/>
            </StackLayout>
        </DataTemplate>
    </Shell.FlyoutFooterTemplate>

    <!--
        TabBar lets you define content that won't show up in a flyout menu. When this content is active
        the flyout menu won't be available. This is useful for creating areas of the application where 
        you don't want users to be able to navigate away from. If you would like to navigate to this 
        content you can do so by calling 
        await Shell.Current.GoToAsync("//LoginPage");
    -->
    <!--<TabBar>
        <ShellContent Route="LoginPage" ContentTemplate="{DataTemplate local:LoginPage}" />
    </TabBar>-->

    <!-- Optional Templates 
    // These may be provided inline as below or as separate classes.

    // This header appears at the top of the Flyout.
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyout-header
    <Shell.FlyoutHeaderTemplate>
        <DataTemplate>
            <Grid>ContentHere</Grid>
        </DataTemplate>
    </Shell.FlyoutHeaderTemplate>

    // ItemTemplate is for ShellItems as displayed in a Flyout
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#define-flyoutitem-appearance
    <Shell.ItemTemplate>
        <DataTemplate>
            <ContentView>
                Bindable Properties: Title, Icon
            </ContentView>
        </DataTemplate>
    </Shell.ItemTemplate>

    // MenuItemTemplate is for MenuItems as displayed in a Flyout
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#define-menuitem-appearance
    <Shell.MenuItemTemplate>
        <DataTemplate>
            <ContentView>
                Bindable Properties: Text, Icon
            </ContentView>
        </DataTemplate>
    </Shell.MenuItemTemplate>

    -->

</Shell>
